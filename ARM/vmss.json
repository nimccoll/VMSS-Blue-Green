{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vmSku": {
        "type": "string",
        "defaultValue": "Standard_A1",
        "metadata": {
          "description": "Size of VMs in the VM Scale Set."
        }
      },
      "windowsOSVersion": {
        "type": "string",
        "defaultValue": "2016-Datacenter",
        "allowedValues": [
          "2008-R2-SP1",
          "2012-Datacenter",
          "2012-R2-Datacenter",
          "2016-Datacenter"
        ],
        "metadata": {
          "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter & 2016-Datacenter."
        }
      },
      "blueOrGreen":{
        "type":"string",
        "metadata":{
            "description":"Identifies whether this VMSS represents the blue or green deployment."
        }
      },
      "vmssName": {
        "type": "string",
        "metadata": {
          "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
        },
        "minLength": 3,
        "maxLength": 61
      },
      "instanceCount": {
        "type": "int",
        "defaultValue": 3,
        "metadata": {
          "description": "Number of VM instances (100 or less)."
        },
        "maxValue": 100
      },
      "au": {
        "type": "string",
        "defaultValue": "vmssadmin",
        "metadata": {
          "description": "Admin username on all VMs."
        }
      },
      "ap": {
        "type": "securestring",
        "metadata": {
          "description": "Admin password on all VMs."
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. For example, if stored on a public GitHub repo, you'd use the following URI: https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-webapp-dsc-autoscale."
        },
        "defaultValue": "https://{your blob storage account here}.blob.core.windows.net/vmssdemo"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "defaultValue": "",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  If your artifacts are stored on a public repo or public storage account you can leave this blank."
        }
      },
      "powershelldscZip": {
        "type": "string",
        "defaultValue": "/DSC/IISInstall.ps1.zip",
        "metadata": {
          "description": "Location of the PowerShell DSC zip file relative to the URI specified in the _artifactsLocation, i.e. /DSC/IISInstall.ps1.zip"
        }
      },
      "webDeployPackage": {
        "type": "string",
        "defaultValue": "/WebDeploy/DefaultASPWebApp.v1.0.zip",
        "metadata": {
          "description": "Location of the  of the WebDeploy package zip file relative to the URI specified in _artifactsLocation, i.e. /WebDeploy/DefaultASPWebApp.v1.0.zip"
        }
      },
      "powershelldscUpdateTagVersion": {
        "type": "string",
        "defaultValue": "1.0",
        "metadata": {
          "description": "Version number of the DSC deployment. Changing this value on subsequent deployments will trigger the extension to run."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "virtualNetworkName":{
        "type": "string",
        "metadata": {
            "description": "Name of the virtual network where the VMSS will reside."
        }
      },
      "loadBalancerName":{
        "type": "string",
        "metadata": {
            "description": "The load balancer to associate the VMSS with."
        }
      }
    },
    "variables": {
      "namingInfix": "[toLower(parameters('vmssName'))]",
      "nsgName": "[concat(parameters('virtualNetworkName'), '-nsg')]",      
      "subnetName": "[concat(parameters('blueOrGreen'), 'Subnet')]",
      "natPoolName": "[concat(parameters('blueOrGreen'), 'natpool')]",
      "bePoolName": "[concat(parameters('blueOrGreen'), 'bepool')]",
      "nicName": "[concat(variables('namingInfix'), '-nic')]",
      "ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
      "osType": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "[parameters('windowsOSVersion')]",
        "version": "latest"
      },
      "imageReference": "[variables('osType')]",
      "webDeployPackageFullPath": "[concat(parameters('_artifactsLocation'), parameters('webDeployPackage'), parameters('_artifactsLocationSasToken'))]",
      "powershelldscZipFullPath": "[concat(parameters('_artifactsLocation'), parameters('powershelldscZip'), parameters('_artifactsLocationSasToken'))]",
      "powershelldscArchiveFolder": "DSC",
      "powershelldscArchiveFileName": "IISInstall.ps1.zip",
      "autoScaleHostName": "[concat(variables('namingInfix'), 'autoscalehost')]"
    },
    "resources": [
      {
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "name": "[variables('namingInfix')]",
        "location": "[parameters('location')]",
        "apiVersion": "2016-04-30-preview",
        "sku": {
          "name": "[parameters('vmSku')]",
          "tier": "Standard",
          "capacity": "[parameters('instanceCount')]"
        },
        "properties": {
          "overprovision": "true",
          "upgradePolicy": {
            "mode": "Automatic"
          },
          "virtualMachineProfile": {
            "storageProfile": {
              "osDisk": {
                "caching": "ReadWrite",
                "createOption": "FromImage"
              },
              "imageReference": "[variables('imageReference')]"
            },
            "osProfile": {
              "computerNamePrefix": "[variables('namingInfix')]",
              "adminUsername": "[parameters('au')]",
              "adminPassword": "[parameters('ap')]"
            },
            "networkProfile": {
              "networkInterfaceConfigurations": [
                {
                  "name": "[variables('nicName')]",
                  "properties": {
                    "primary": true,
                    "ipConfigurations": [
                      {
                        "name": "[variables('ipConfigName')]",
                        "properties": {
                          "subnet": {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                          },
                          "loadBalancerBackendAddressPools": [
                            {
                              "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', parameters('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
                            }
                          ],
                          "loadBalancerInboundNatPools": [
                            {
                              "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', parameters('loadBalancerName'), '/inboundNatPools/', variables('natPoolName'))]"
                            }
                          ]
                        }
                      }
                    ],
                    "networkSecurityGroup": {
                      "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                    }
                  }
                }
              ]
            },
            "extensionProfile": {
              "extensions": [
                {
                  "name": "Microsoft.Powershell.DSC",
                  "properties": {
                    "publisher": "Microsoft.Powershell",
                    "type": "DSC",
                    "typeHandlerVersion": "2.9",
                    "autoUpgradeMinorVersion": true,
                    "forceUpdateTag": "[parameters('powershelldscUpdateTagVersion')]",
                    "settings": {
                      "configuration": {
                        "url": "[variables('powershelldscZipFullPath')]",
                        "script": "IISInstall.ps1",
                        "function": "InstallIIS"
                      },
                      "configurationArguments": {
                        "nodeName": "localhost",
                        "WebDeployPackagePath": "[variables('webDeployPackageFullPath')]"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      {
        "type": "Microsoft.Insights/autoscaleSettings",
        "apiVersion": "2015-04-01",
        "name": "[variables('autoScaleHostName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]"
        ],
        "properties": {
          "name": "[variables('autoScaleHostName')]",
          "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]",
          "enabled": true,
          "profiles": [
            {
              "name": "Profile1",
              "capacity": {
                "minimum": "1",
                "maximum": "5",
                "default": "1"
              },
              "rules": [
                {
                  "metricTrigger": {
                    "metricName": "Percentage CPU",
                    "metricNamespace": "",
                    "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]",
                    "timeGrain": "PT1M",
                    "statistic": "Average",
                    "timeWindow": "PT5M",
                    "timeAggregation": "Average",
                    "operator": "GreaterThan",
                    "threshold": 80
                  },
                  "scaleAction": {
                    "direction": "Increase",
                    "type": "ChangeCount",
                    "value": "1",
                    "cooldown": "PT5M"
                  }
                },
                {
                  "metricTrigger": {
                    "metricName": "Percentage CPU",
                    "metricNamespace": "",
                    "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]",
                    "timeGrain": "PT1M",
                    "statistic": "Average",
                    "timeWindow": "PT5M",
                    "timeAggregation": "Average",
                    "operator": "LessThan",
                    "threshold": 50
                  },
                  "scaleAction": {
                    "direction": "Decrease",
                    "type": "ChangeCount",
                    "value": "1",
                    "cooldown": "PT5M"
                  }
                }
              ]
            }
          ]
        }
      }
    ]
  }
  